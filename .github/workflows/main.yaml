name: CI/CD using Github Actions & AWS CodeDeploy

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  push:
    branches:
      - main

#permissions:
#  contents: read

env:
  APPLICATION_PATH: ./src/main/resources/application.yaml
  APPLICATION_PROD_PATH: ./src/main/resources/application-prod.yaml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Set application.yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.APPLICATION_PATH }}
        env:
          spring.profiles.include: ${{ secrets.INCLUDE_PROFILE }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.CLIENT_ID_KAKAO }}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.CLIENT_SECRET_KAKAO }}
          spring.security.oauth2.client.registration.kakao.redirect-uri: ${{ secrets.REDIRECT_URI_KAKAO }}
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.CLIENT_ID_GOOGLE }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.CLIENT_SECRET_GOOGLE }}
          spring.security.oauth2.client.registration.naver.client-id: ${{ secrets.CLIENT_ID_NAVER }}
          spring.security.oauth2.client.registration.naver.client-secret: ${{ secrets.CLIENT_SECRET_NAVER }}
          spring.security.oauth2.client.registration.naver.redirect-uri: ${{ secrets.REDIRECT_URI_NAVER }}

      - name: Set application-prod.yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.APPLICATION_PROD_PATH }}
        env:
          spring.database.spring.database.url: ${{ secrets.PROD_DB_URL }}
          spring.database.spring.database.username: ${{ secrets.PROD_DB_USERNAME }}
          spring.database.spring.database.password: ${{ secrets.PROD_DB_PASSWORD }}


      - name: GRANT execute permission for gradlew
        run: chmod +x ./gradlew
        
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Upload to S3
        run: aws s3 cp --region us-east-2 ./$GITHUB_SHA.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/deploy/$GITHUB_SHA.zip --source .

      - name: Code Deploy
        run: aws deploy create-deployment --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }}
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=deploy/$GITHUB_SHA.zip
